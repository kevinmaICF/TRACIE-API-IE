// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRACIE_API_IE.Models;

namespace TRACIEAPIIE.Migrations
{
    [DbContext(typeof(TracieIEContext))]
    partial class TracieIEContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TRACIE_API_AC.Models.IE_tblUserContactInformationUnregistered", b =>
                {
                    b.Property<int>("UserUnregisteredID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<bool>("NewsletterSubEmail1");

                    b.Property<string>("UserCity")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserDisciplineOrProfession")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("UserEmail1")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserEmail2")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserFirstName")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UserLastName")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UserOrg")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserPhone1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPhone1Ext")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserPhone2")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPhone2Ext")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserPrefTitle")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserState")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserStreet1")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserStreet2")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserTitle")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("UserZIP")
                        .HasColumnType("varchar(10)");

                    b.HasKey("UserUnregisteredID");

                    b.ToTable("IE_tblUserContactInformationUnregistered");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.AspNetRoles", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(450);

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.AspNetUserRoles", b =>
                {
                    b.Property<string>("RoleId");

                    b.Property<string>("UserId")
                        .HasMaxLength(450);

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.AspNetUsers", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool?>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool?>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("ID");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.AspNetUserTokens", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(450);

                    b.Property<string>("Name")
                        .HasMaxLength(450);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.HasAlternateKey("LoginProvider", "Name", "UserId");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_ascDirUser", b =>
                {
                    b.Property<int>("DirUserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("DirID");

                    b.Property<int>("UserID");

                    b.HasKey("DirUserID");

                    b.ToTable("IE_ascDirUser");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_ascDirUserAdmin", b =>
                {
                    b.Property<int>("DirUserAdminID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("DirID");

                    b.Property<int>("UserID");

                    b.HasKey("DirUserAdminID");

                    b.ToTable("IE_ascDirUserAdmin");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_ascDirUserNotification", b =>
                {
                    b.Property<int>("DirUserNotificationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("DirID");

                    b.Property<int>("UserID");

                    b.HasKey("DirUserNotificationID");

                    b.ToTable("IE_ascDirUserNotification");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_ascDirUserUnsubscribe", b =>
                {
                    b.Property<int>("DirUserUnsubscribeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("DirID");

                    b.Property<int>("UserID");

                    b.HasKey("DirUserUnsubscribeeID");

                    b.ToTable("IE_ascDirUserUnsubscribe");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_ascMBFilePost", b =>
                {
                    b.Property<int>("FilePostID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("FileIDNum");

                    b.Property<int?>("PostID");

                    b.HasKey("FilePostID");

                    b.ToTable("IE_ascMBFilePost");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_ascThreadUser", b =>
                {
                    b.Property<int>("ThreadUserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("ThreadID");

                    b.Property<int>("UserID");

                    b.HasKey("ThreadUserID");

                    b.HasIndex("ThreadID");

                    b.ToTable("IE_ascThreadUser");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_ascThreadUserNotification", b =>
                {
                    b.Property<int>("ThreadUserNotificationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("ThreadID");

                    b.Property<int>("UserID");

                    b.HasKey("ThreadUserNotificationID");

                    b.ToTable("IE_ascThreadUserNotification");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_ascThreadUserUnsubscribe", b =>
                {
                    b.Property<int>("ThreadUserUnsubscribe")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("ThreadID");

                    b.Property<int>("UserID");

                    b.HasKey("ThreadUserUnsubscribe");

                    b.ToTable("IE_ascThreadUserUnsubscribe");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_luEventType", b =>
                {
                    b.Property<int>("EventTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("EventTypeText")
                        .HasColumnType("varchar(50)");

                    b.HasKey("EventTypeID");

                    b.ToTable("IE_luEventType");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_luMBType", b =>
                {
                    b.Property<int>("TypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("TypeName");

                    b.HasKey("TypeID");

                    b.ToTable("IE_luMBType");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_luNotificationTemplate", b =>
                {
                    b.Property<int>("NotificationTemplateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("TemplateSubject");

                    b.Property<string>("TemplateText")
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("TemplateTitle");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("NotificationTemplateID");

                    b.ToTable("IE_luNotificationTemplate");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblEvent", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("EventTitle");

                    b.Property<int?>("EventTypeID");

                    b.Property<string>("EventVar1");

                    b.Property<string>("EventVar2");

                    b.Property<int?>("StatusID");

                    b.HasKey("EventID");

                    b.ToTable("IE_tblEvent");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblLogEvent", b =>
                {
                    b.Property<int>("EventRecID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int?>("DirID");

                    b.Property<string>("EventDesc");

                    b.Property<string>("EventTitle");

                    b.Property<int?>("EventTypeID");

                    b.Property<int?>("FileID");

                    b.Property<int?>("ServerID");

                    b.Property<int?>("ThreadID");

                    b.Property<int?>("UserID");

                    b.HasKey("EventRecID");

                    b.ToTable("IE_tblLogEvent");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblMBDir", b =>
                {
                    b.Property<int>("DirID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLatest")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(3500)");

                    b.Property<int?>("Ord");

                    b.Property<int?>("ParentID");

                    b.Property<string>("Path")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("StatusID");

                    b.Property<int?>("Sticky");

                    b.Property<string>("Text")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("TextShort")
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("TypeID");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("DirID");

                    b.ToTable("IE_tblMBDir");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblMBFile", b =>
                {
                    b.Property<int>("FileIDNum")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("FileExtension")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FileID")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("FileMimeType")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("FileSize");

                    b.Property<int?>("FileTypeID");

                    b.Property<int>("StatusID");

                    b.Property<string>("Text")
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("FileIDNum");

                    b.ToTable("IE_tblMBFile");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblMBPost", b =>
                {
                    b.Property<int>("PostID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLatest")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Ord");

                    b.Property<int?>("ParentID");

                    b.Property<int?>("StatusID");

                    b.Property<int?>("Sticky");

                    b.Property<string>("Text")
                        .HasColumnType("varchar(350)");

                    b.Property<int?>("ThreadID");

                    b.Property<string>("Title");

                    b.Property<int?>("TypeID");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("PostID");

                    b.HasIndex("ThreadID");

                    b.ToTable("IE_tblMBPost");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblMBThread", b =>
                {
                    b.Property<int>("ThreadID");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLatest")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(3500)");

                    b.Property<int?>("DirID");

                    b.Property<int?>("FileCount");

                    b.Property<int?>("PostCount");

                    b.Property<int?>("StatusID");

                    b.Property<int?>("Sticky");

                    b.Property<string>("Text")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("TypeID");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("ThreadID");

                    b.ToTable("IE_tblMBThread");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblNotification", b =>
                {
                    b.Property<int>("NotificationRecID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("NotificationAddress")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NotificationMessage")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("NotificationSubject");

                    b.Property<int?>("StatusID");

                    b.HasKey("NotificationRecID");

                    b.ToTable("IE_tblNotification");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblNotificationQueue", b =>
                {
                    b.Property<int>("NotificationQueueID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateSent")
                        .HasColumnType("datetime");

                    b.Property<int?>("DirID");

                    b.Property<int?>("EventTypeID");

                    b.Property<int?>("NotificationTemplateID");

                    b.Property<int?>("ParentID");

                    b.Property<int?>("StatusID");

                    b.Property<int?>("ThreadID");

                    b.HasKey("NotificationQueueID");

                    b.ToTable("IE_tblNotificationQueue");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblPendingRejectedUser", b =>
                {
                    b.Property<int>("PendRejID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusID");

                    b.Property<int?>("UpdatedBy");

                    b.Property<int>("UserID");

                    b.HasKey("PendRejID");

                    b.ToTable("IE_tblPendingRejectedUser");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblUserContactInformation", b =>
                {
                    b.Property<int>("UserContactID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("APIKey")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLogin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Email1Verified");

                    b.Property<int?>("Email2Verified");

                    b.Property<bool?>("IEAccess");

                    b.Property<bool?>("Listerv");

                    b.Property<bool?>("NewsletterSubEmail1");

                    b.Property<bool?>("NewsletterSubEmail2");

                    b.Property<string>("UId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("UserCity")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserDisciplineOrProfession")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("UserEmail1")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserEmail2")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserFirstName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserLastName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserOrg")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserPhone1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPhone1Ext")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserPhone2")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPhone2Ext")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserPrefTitle")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserState")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserStreet1")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserStreet2")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserTitle")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("UserZIP")
                        .HasColumnType("varchar(10)");

                    b.HasKey("UserContactID");

                    b.ToTable("IE_tblUserContactInformation");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.AspNetUserRoles", b =>
                {
                    b.HasOne("TRACIE_API_IE.Models.AspNetRoles", "AspNetRoles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TRACIE_API_IE.Models.AspNetUsers", "AspNetUsers")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.AspNetUserTokens", b =>
                {
                    b.HasOne("TRACIE_API_IE.Models.AspNetUsers", "AspNetUsers")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_ascThreadUser", b =>
                {
                    b.HasOne("TRACIE_API_IE.Models.IE_tblMBThread", "IE_tblMBThread")
                        .WithMany()
                        .HasForeignKey("ThreadID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblMBPost", b =>
                {
                    b.HasOne("TRACIE_API_IE.Models.IE_tblMBThread", "IE_tblMBThread")
                        .WithMany()
                        .HasForeignKey("ThreadID");
                });

            modelBuilder.Entity("TRACIE_API_IE.Models.IE_tblMBThread", b =>
                {
                    b.HasOne("TRACIE_API_IE.Models.IE_tblMBDir", "IE_tblMBDir")
                        .WithMany()
                        .HasForeignKey("ThreadID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
